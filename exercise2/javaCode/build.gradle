plugins {
    id 'java'
    id 'application'
    id "me.champeau.gradle.jmh" version "0.4.8"
}


application {
    mainClassName = 'pl.setblack.etalife.LifeWindow'
}

dependencies {
    compile group: 'org.openjfx', name: 'javafx-controls', version: '12'
    compile project(':etaCode')
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'pl.setblack.etalife.LifeWindow'
    }
    baseName = 'etaLife'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


// java 12

compileJava {
    doFirst {
        options.compilerArgs = [
//                '--module-path', '/opt/java/jfx/javafx-sdk-11.0.2/lib',
//                '--add-modules', 'javafx.controls',
//                '--add-modules', 'javafx.fxml',
//                '--add-modules', 'javafx.web',
//                '--add-modules', 'javafx.graphics',
//                '--add-modules', 'javafx.media'
        ]
    }
}


//compileTestJava {
//    inputs.property("moduleName", moduleName)
//    doFirst {
//        options.compilerArgs = [
//                '--module-path', classpath.asPath,
//                '--add-modules', 'javafx.controls',
//                '--add-modules', 'javafx.fxml',
//                '--add-modules', 'javafx.web',
//                '--add-modules', 'javafx.graphics',
//                '--add-modules', 'javafx.media',
//                '--add-modules', 'org.junit.jupiter.api',
//                '--add-reads', "$moduleName=org.junit.jupiter.api",
//                '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
//        ]
//        classpath = files()
//    }
//}

run {
    doFirst {
        jvmArgs = [
                //java 9-12
//                '--module-path', '/opt/java/jfx/javafx-sdk-11.0.2/lib',
//                '--add-modules', 'javafx.controls',
//                '--add-modules', 'javafx.fxml',
//                '--add-modules', 'javafx.web',
//                '--add-modules', 'javafx.graphics',
//                '--add-modules', 'javafx.media',

                '-Djava.library.path=/opt/java/tools',
                '-Xss512m',
                '-Xmx1g',
// simple Hotspot diagnostic
//                '-XX:+PrintCompilation',
// inlining diagnostic
//                '-XX:+UnlockDiagnosticVMOptions',
//                '-XX:+PrintInlining',
                '-Xshare:off',
//jitwatch additional
//                '-XX:+UnlockDiagnosticVMOptions',
//                '-XX:+TraceClassLoading',
//                '-XX:+LogCompilation' ,
//                '-XX:+PrintAssembly'
//graal
//                '-XX:+UnlockExperimentalVMOptions',
//                '-XX:+EnableJVMCI', '-XX:+UseJVMCICompiler'
//                '-XX:+UseG1GC' ,
//                '-XX:+UnlockDiagnosticVMOptions' ,
        ]
        standardInput = System.in
    }
}


jmh {
    jvmArgs = ['-Xss512m',
               '-Xms10g',
               '-Xmx10g'
               //    graal
               //       ,'-XX:+UnlockExperimentalVM Options',
               //       '-XX:+EnableJVMCI', '-XX:+UseJVMCICompiler'
    ]
    warmup = '1s'
    forceGC = true
    iterations = 4
    fork = 3
    timeOnIteration = '3s'
    //enable performance counters
//    profilers = ['perf']
}



